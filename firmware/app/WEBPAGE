Website for this thing:
Goals:
	- sell HW (buy-now through paypal)
	- open-source collaboration on software (sourceforge?)
	- sharing server for receiving traffic from users and pushing live traffic to users (http for scalability?)
	- comments blog by users

Wordpress?
not just ADS-B, but also ACAS
Need a name: nanoADSB? ADSBStick(taken)? SSRStick? RadarEavesdroper?  RadarWatch?  OpenADSB? OpenSSR?

OpenADSB
Open-source hardware and software for receiving aircraft ADS-B messages

------------------------
Home  About  News  Downloads  Order  Build  Ordering FAQ  Technical FAQ  Forums

There are several ADS-B receivers on the market.  For no good reason, other than the technical challenge, 
I decided to design and build my own.  Since I leveraged some of the existing open-source hardware and 
software designs and information, I am making the entire project open-source.

<photo of covered and uncovered ADSB stick>

The hardware consists of a small USB stick.  It implements an RF front end, analog decoder, and USB microcontroller.
The RF front end is similar to what others have designed, but it includes a built-in LNA (low noise amplifier) at
the front of the chain.  This improves reception of distant signals, but is also resilient to strong transmitters
nearby.  The microcontroller searches for and decodes Mode A/C, Mode S, TACAN, and ADS-B messages.  The received messages
are sent to an attached computer, or logged to internal flash memory for later download.  

The software consists of several pieces for maximum flexibility.  The device can be configured to operate 
similar to the bluebox/blackbox/microADSB or simlar receivers.  In such a case, it appears as a serial port which 
streams received messages to other software, such as PlanePlotter, or AdsbPlot, etc.  Alternatively, the device
can be configured to operate with a simple USB protocol which streams the received packets to a small Python 
program acting as a server.  From here, the server can distribute packets to any number of network clients.
The python server can also be configured to stream the messages to another sharing server.

Additionally, the software can feed the position reports to Google Earth, either running locally, or over the
network.  This provides a powerful way to visualize aircraft traffic in 3D.  By looking up aircraft identifiers
in online databases, a lot of information can be determined, including owner/operator, registration number, 
aircraft type, history, photos, etc.

-----------------------
Build Page:

For the adventurous DIY'ers out there, you may choose to build your own receiver from scratch, or in kit form.
Components may be purchased here, or from normal electronics distributors (Digikey, Mouser, Avnet, Arrow, Newark, etc).
The PCB is a standard 4 layer board. Complete fabrication files (gerbers, NC drill, BOM, etc) can be downloaded
and sent to your favority PCB shop.  The assembly will be tricky unless you have the proper SMD soldering tools.
A reflow oven or hot-air bath will come in handy since all the components are surface-mount and many are leadless
packages.  It's unlikely you will be able to assemble the board using only a soldering iron.  For most people,
the better choice is to buy the assembled unit.  

For the hardware hackers out there, here's the complete data package:

ZIP file:					
	Schematics
	Gerbers
	NC Drill file
	Pick and place file
	Fab drawing
	Assembly drawing
	BOM

Parts kit A (the complete kit):				<click to BUY>
	PCB
	All electronic components
	Plastic case and lightpipes

Parts kit B (the hard-to-get pieces only):		<click to BUY>
	PCB
	2 SAW filters (F1, F2)
	AVR microcontroller (U1) pre-programmed with bootloader (no AVR programming tools required)
	
Antenna kit:						<click to BUY>
	a custom Slim-Jim type omnidirectional antenna centered at 1090 MHz with
	attached 2 meter RG-58 cable with male SMA connector

Optional filter:					<click to BUY>
	an optional RF SAW filter with SMA connectors, 
	for those whose receivers are overloaded by nearby strong transmitters
	(most users will not need this)

For those building the complete kit, or sourcing their own parts, you will need an AVR programmer which supports
PDI-interface two-line programming (I use the AVR ISP mkII), to program the bootloader.  Once the bootloader
is programmed, the application(s) may be programmed over the USB port.
	
At this time, Paypal is the only accepted payment method.  You can pay through a credit-card or bank
account using your Paypal account.  We ship worldwide.

For the latest software, hardware, and other files, please browse or check out the files from our SVN server:
svn.sourceforge.net/projects/openadsb

Many thanks to the developers and hackers who have provided assistance, inspiration, and insight, including but
not limited to: 
	Andy at Jetvision / miniadsb.web99.de
	Edward at http://www.lll.lu/~edward/edward/adsb/VerySimpleADSBreceiver.html
	airframes.org
	Goran (AD6IW) at http://www.ad6iw.com/
	GNUradio ADSB decoder project 
	
	
------------------
Order Page:

Assembled and tested unit:				<click to BUY>
	1 receiver with no antenna

Antenna Type A:
	magnetic mount 'car-phone' type of antenna, works at 1090MHz

Antenna Type B:
	custom Slim-Jim type of omnidirectional antenna centered at 1090MHz
	enclosed in PVC tube

At this time, Paypal is the only accepted payment method.  You can pay through a credit-card or bank
account using your Paypal account.  We ship worldwide.

Prices are based on the volume of orders received.  At this time, low volume means the prices are 
higher than I would like.  As volume increases, prices will go down.

-----------------
Technical FAQ:

Q: How many packets per second can this receiver capture?
A: The AVR microcontroller software is efficently implemented and the AVR takes care of transferring
   the packet over USB in the background, freeing the AVR to receive the next packet while the previous
   one(s) are being transferred.  While the actual number of packets per second depends on many factors,
   including your location, antenna, nearby transmitters, etc, this device should be able to handle
   more packets per second in a given environment than the microADSB or XXXX receivers.

Q: Distance?
A:

Q: What information is captured by this receiver?
A: OpenADSB currently receives Mode-S transmissions by aircraft, TIS-B transmissions by ground stations,
   and Mode A/C replies by aircraft.  The Mode-S messages include DF4, DF5, DF11, DF17, DF18, DF21.  
   Some of these are "Extended Squitter" messages, and some are short ACAS messages.  Some messages 
   include position, some only altitude.  Each message includes a unique 24-bit ICAO aircraft identifier,
   and the software can be configured to lookup this identifer in a database, to learn more detailed
   information about the aircraft: type, age, owner/operator, registration number, previous contacts, etc.

Q: What PC software does this work with?
A: The OpenADSB receiver can be loaded with firmware that makes it communicate like any of the commonly
   available receivers.  So it will work with any software that supports those receivers, such as 
   PlanePlotter, ADSBScope, xxx.  Alternatively, custom software provides more features.

---------------

Disclaimer:

FIXME - for educational or entertainment uses only.  Do not rely on this receiver for safety-critical
applications.  This hardware is not certified by the FAA, nor intended for any official use.  While the
best effort has been made to ensure the accuracy of operation, errors may occur.  Software is provided
with NO WARRANTY, nor implied warranty of ... For purchasers of assembled and tested unit, a 30-day limited
warranty is provided, which covers flaws in the workmanship of the receiver hardware only.

----------------

clip art graphics:
Atmel AVR logo
Python logo
aircraft
radar screen
RF signal logo
Google Earth logo
Planeplotter logo

